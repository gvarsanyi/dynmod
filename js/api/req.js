// Generated by CoffeeScript 1.7.1
(function() {
  var cache, dir, fs, install, list, read;

  fs = require('fs');

  dir = require('./dir');

  install = require('./install');

  list = require('./list');

  read = function(pkg, version, callback) {
    var err, mod, path;
    try {
      path = dir + '/' + pkg + '/' + version + '/node_modules/' + pkg;
      mod = require(path);
      (cache[pkg] != null ? cache[pkg] : cache[pkg] = {})[version] = mod;
      return callback(null, mod);
    } catch (_error) {
      err = _error;
      return callback(err);
    }
  };

  module.exports = function(spec, callback) {
    var mod, pkg, verify_version, version, _ref, _ref1;
    _ref = spec.split('@'), pkg = _ref[0], version = _ref[1];
    if (mod = ((_ref1 = cache[pkg]) != null ? _ref1[version || currents[pkg]] : void 0) != null) {
      return callback(null, mod);
    }
    verify_version = function() {
      return fs.exists(dir + '/' + pkg + '/' + version + '/.dynmod-proper', function(exists) {
        var msg;
        if (exists) {
          return read(pkg, version, callback);
        }
        msg = pkg + '@' + version + ' is partially installed (possibly being ' + 'installed by an other process?). If you are sure this is a ' + 'failed installation, use require(\'dynmod\').remove(\'' + pkg + '\', \'' + version + '\'); to remove it.';
        return callback(new Error(msg));
      });
    };
    if (!version) {
      return list(pkg, function(err, versions) {
        if (err) {
          return callback(err);
        }
        if (versions && versions.length > 0) {
          version = versions.pop();
          return verify_version();
        } else {
          return install(pkg, function(err, version) {
            if (err) {
              return callback(err);
            }
            version = versions.pop();
            return verify_version();
          });
        }
      });
    } else {
      return verify_version();
    }
  };

  module.exports.cache = cache = {};

}).call(this);
