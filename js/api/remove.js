// Generated by CoffeeScript 1.7.1
(function() {
  var cache, child_process, common, dir, exec_sync, fs;

  child_process = require('child_process');

  exec_sync = require('sync-exec');

  fs = require('fs');

  cache = require('../cache');

  dir = require('../dir');

  common = function(spec) {
    var pkg, rm_dir, version, _ref;
    _ref = spec.split('@'), pkg = _ref[0], version = _ref[1];
    console.log('[dynmod] removing ' + spec);
    if (version) {
      if (cache.pkg[pkg] != null) {
        delete cache.pkg[pkg][version];
      }
      rm_dir = dir + '/' + pkg + '/' + version;
    } else {
      delete cache.pkg[pkg];
      rm_dir = dir + '/' + pkg;
    }
    return [pkg, version, rm_dir];
  };

  module.exports = function(spec, callback) {
    var pkg, rm_dir, version, _ref;
    _ref = common(spec), pkg = _ref[0], version = _ref[1], rm_dir = _ref[2];
    return fs.exists(rm_dir, function(exists) {
      if (!exists) {
        return callback(new Error(spec + ' is not installed'));
      }
      return child_process.exec('rm -rf ' + rm_dir, function(err) {
        if (err) {
          return callback(err);
        }
        if (!version) {
          return callback();
        }
        return fs.readdir(dir + '/' + pkg, function(err, files) {
          if (err || (files && files.length)) {
            return callback();
          }
          return child_process.exec('rm -rf ' + dir + '/' + pkg, function(err) {
            return callback();
          });
        });
      });
    });
  };

  module.exports.sync = function(spec) {
    var files, pkg, rm_dir, version, _ref;
    _ref = common(spec), pkg = _ref[0], version = _ref[1], rm_dir = _ref[2];
    if (!fs.existsSync(rm_dir)) {
      throw new Error(spec + ' is not installed');
    }
    exec_sync('rm -rf ' + rm_dir);
    if (!version) {
      return true;
    }
    files = fs.readdirSync(dir + '/' + pkg);
    if (!(files && files.length)) {
      exec_sync('rm -rf ' + dir + '/' + pkg);
    }
    return true;
  };

}).call(this);
