// Generated by CoffeeScript 1.7.1
(function() {
  var child_process, exec_sync, list,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  child_process = require('child_process');

  exec_sync = require('sync-exec');

  list = require('./list');

  module.exports = function(pkg, callback) {
    var cmd;
    if (pkg.indexOf('@') > -1) {
      return callback(new Error('Version is not required'));
    }
    cmd = 'npm show ' + pkg + ' version 2> /dev/null';
    return child_process.exec(cmd, function(err, stdout, stderr) {
      var current;
      if (err) {
        return callback(err);
      }
      current = stdout.replace(/^\s+|\s+$/g, '');
      return list(pkg, function(err, versions) {
        return callback(null, current, versions && __indexOf.call(versions, current) >= 0, versions);
      });
    });
  };

  module.exports.sync = function(pkg) {
    var current, status, stderr, stdout, versions, _ref;
    if (pkg.indexOf('@') > -1) {
      return callback(new Error('Version is not required'));
    }
    _ref = exec_sync('npm show ' + pkg + ' version'), status = _ref.status, stdout = _ref.stdout, stderr = _ref.stderr;
    if (status) {
      throw new Error(stderr);
    }
    current = stdout.replace(/^\s+|\s+$/g, '');
    versions = list.sync(pkg);
    return [current, versions && __indexOf.call(versions, current) >= 0, versions];
  };

}).call(this);
