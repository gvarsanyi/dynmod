#!/usr/bin/env node
// Generated by CoffeeScript 1.7.1
(function() {
  var args, bin, child_process, dynmod, error, run, spec, _ref;

  child_process = require('child_process');

  dynmod = require('./dynmod');

  error = function(err, no_usage) {
    var e;
    console.error('');
    if (Array.isArray(err)) {
      console.error(((function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = err.length; _i < _len; _i++) {
          e = err[_i];
          _results.push(String(e));
        }
        return _results;
      })()).join('\n'));
    } else {
      console.error(String(err));
    }
    if (!no_usage) {
      console.error("\nUsage: (binary-name is required for packages with multiple binaries)\n  dynomd-run package[@version][:binary-name] [parameters...]\n");
    }
    return process.exit(1);
  };

  run = function(bin) {
    var child;
    child = child_process.exec(bin + ' ' + process.argv.slice(3).join(' '));
    child.stderr.on('data', function(data) {
      return process.stderr.write(data);
    });
    return child.stdout.on('data', function(data) {
      return process.stdout.write(data);
    });
  };

  if (!process.argv[2]) {
    error(new Error('Missing package name'));
  }

  args = process.argv.slice(3);

  _ref = String(process.argv[2]).split(':'), spec = _ref[0], bin = _ref[1];

  dynmod.bin(spec, function(err, binaries) {
    var b, bin_list, path;
    if (err) {
      return error(err, true);
    }
    bin_list = [];
    for (b in binaries) {
      path = binaries[b];
      bin_list.push(b);
    }
    if (!binaries || bin_list.length === 0) {
      return error(new Error('No binaries available for ' + spec));
    } else if (bin) {
      if (binaries[bin] != null) {
        return run(binaries[bin]);
      } else {
        return error(new Error('No such binary for ' + spec + ': ' + bin + '. Available: ' + bin_list.join(', ')));
      }
    } else if (bin_list.length === 1) {
      return run(binaries[bin_list[0]]);
    } else {
      return error(new Error('Multiple binaries are available for ' + spec + ': ' + bin_list.join(', ')));
    }
  });

}).call(this);
